from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from sqlalchemy import BigInteger

from app.db.models import LotStatus
import app.db.requests as rq
from config import BOT_ID, CHANNEL_ID, status_mapping

# @user_router.callback_query(IsUser(), lambda cb: re.match(r"^bid_10_\d+$", cb.data))
# async def outbid_bid_1(cb: CallbackQuery):
#     lot_id = int(cb.data.split("_")[-1])
#     lot = await rq.get_lot_data(lot_id)

async def bid_lot(lot, bid: int, cb: CallbackQuery, lot_id: int, user_id: BigInteger):
    if lot.status == LotStatus.SOLD:
        await cb.message.delete()
        await cb.message.answer("–õ–æ—Ç —É–∂–µ –≤—ã–∫—É–ø–ª–µ–Ω.")
    elif lot.status == LotStatus.EXPIRED:
        await cb.message.delete()
        await cb.message.answer("–õ–æ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏, –µ–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ –∫—É–ø–∏–ª.")
    else:
        applicant = await rq.get_lot_applicant(lot_id)
        if applicant:
            applicant = await rq.get_lot_applicant(lot_id)
            await cb.bot.send_message(chat_id=applicant,
                                      text=f"–í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ –ª–æ—Ç #{lot.id} –±—ã–ª–∞ –ø–µ—Ä–µ–±–∏—Ç–∞.(–¢—É—Ç –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ —á—Ç–æ–±—ã –ø–µ—Ä–µ–±–∏—Ç—å –≤ –æ—Ç–≤–µ—Ç)")
            await rq.set_lot_applicant(lot_id, user_id)
            await rq.set_new_lot_price(lot_id, bid)
            lot = await rq.get_lot_data(lot_id)
            await cb.message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–±–∏–ª–∏ —Å—Ç–∞–≤–∫—É!")
            await cb.bot.edit_message_caption(chat_id=f"@{CHANNEL_ID}",
                                              message_id=lot.message_id,
                                              caption=f"–õ–æ—Ç: <b>#{lot.id}</b>\n"
                                                      f"–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: <b>{lot.starter_price}</b>üåü\n"
                                                      f"–ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç–∞–≤–∫–∞: <b>{lot.real_price}</b>üåü\n"
                                                      f"–°–ª–µ–¥—É—é—â–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: <b>{lot.real_price + 1}</b>üåü\n"
                                                      f"–¶–µ–Ω–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –ø–æ–∫—É–ø–∫–∏: <b>{lot.moment_buy_price}</b>üåü\n"
                                                      f"–ü—Ä–æ–¥–≤–µ—Ü: <b>{lot.seller}</b>\n"
                                                      f"–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: <b>{lot.expired_at.strftime('%Y-%m-%d %H:%M:%S')}</b> (MSK)\n"
                                                      f"–°—Ç–∞—Ç—É—Å: {status_mapping.get(lot.status.value)}",
                                              parse_mode="HTML",
                                              reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                                    [InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ",
                                                                          url=f"https://t.me/{BOT_ID}?start={lot.uuid}")]
                                      ]))
        else:
            await rq.set_lot_applicant(lot_id, user_id)
            await rq.set_new_lot_price(lot_id, bid)
            lot = await rq.get_lot_data(lot_id)
            await cb.message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ —Å–¥–µ–ª–∞–ª–∏ —Å—Ç–∞–≤–∫—É!")
            await cb.bot.edit_message_caption(chat_id=f"@{CHANNEL_ID}",
                                              message_id=lot.message_id,
                                              caption=f"–õ–æ—Ç: <b>#{lot.id}</b>\n"
                                                      f"–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: <b>{lot.starter_price}</b>üåü\n"
                                                      f"–ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç–∞–≤–∫–∞: <b>{lot.real_price}</b>üåü\n"
                                                      f"–°–ª–µ–¥—É—é—â–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: <b>{lot.real_price + 1}</b>üåü\n"
                                                      f"–¶–µ–Ω–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –ø–æ–∫—É–ø–∫–∏: <b>{lot.moment_buy_price}</b>üåü\n"
                                                      f"–ü—Ä–æ–¥–≤–µ—Ü: <b>{lot.seller}</b>\n"
                                                      f"–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: <b>{lot.expired_at.strftime('%Y-%m-%d %H:%M:%S')}</b> (MSK)\n"
                                                      f"–°—Ç–∞—Ç—É—Å: {status_mapping.get(lot.status.value)}",
                                              parse_mode="HTML",
                                              reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                                    [InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ",
                                                                          url=f"https://t.me/{BOT_ID}?start={lot.uuid}")]
                                      ]))