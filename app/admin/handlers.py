from aiogram import F, Router, types

import re

from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, PreCheckoutQuery, InlineKeyboardMarkup, InlineKeyboardButton

from app.middlewares import UserDBCheckMiddleware

import app.db.requests as rq

from app.filters import IsAdmin, IsAdminCb

import app.admin.keyboards as kb

from config import CHANNEL_ID

admin_router = Router()

admin_router.message.outer_middleware(UserDBCheckMiddleware())

@admin_router.message(IsAdmin(), CommandStart())
async def menu(message: Message):
    await message.answer('–í—ã–±–µ—Ä–µ—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –º–µ–Ω—é', reply_markup=kb.admin_menu)






@admin_router.message(IsAdmin(), F.text == 'üé´–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤—ã–µ –ª–æ—Ç—ã')
async def view_new_lots(message: Message):
    lots = await rq.get_new_lots()
    if lots:
        for lot in lots:
            await message.answer_photo(photo=lot['photo_id'],
                                       caption=f'–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: {lot["starter_price"]}‚≠ê\n'
                                               f'–¶–µ–Ω–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –ø–æ–∫—É–ø–∫–∏: {lot["moment_buy_price"]}‚≠ê\n'
                                               f'–ü—Ä–æ–¥–∞–≤–µ—Ü: {lot["seller"]}\n'f''
                                               f'–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {lot["completion_time"]}\n',
                                       reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                                            [InlineKeyboardButton(text='–û–¥–æ–±—Ä–∏—Ç—å –ª–æ—Ç',
                                                            callback_data=f'approve_lot_{lot["id"]}')],
                                                            [InlineKeyboardButton(text='–û–∫–ª–æ–Ω–∏—Ç—å –ª–æ—Ç\n',
                                                            callback_data=f'reject_lot_{lot["id"]}')],
                                                    ])
                                       )
    else:
        await message.answer('–ù–æ–≤—ã—Ö –ª–æ—Ç–æ–≤ –Ω–µ—Ç.')


@admin_router.callback_query(IsAdminCb(), lambda cb: re.match(r'^approve_lot_\d+$', cb.data))
async def approve_lot(cb: CallbackQuery):
    print('–Ø –ï–ë–ê–õ –ë–ê–ë–ê–ô–ö–£')
    print('\n\n\n')
    lot_id = int(cb.data.split('_')[-1])
    await rq.approve_lot(lot_id=lot_id)
    lot = await rq.get_lot_data(lot_id=lot_id)
    await cb.bot.send_photo(chat_id='@auction_saharok',
                            photo=lot.photo_id,
                            caption=f'–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: {lot.starter_price}‚≠ê\n'
                                    f'–¶–µ–Ω–∞ –ø–µ—Ä–µ–±–∏–≤–∫–∏: {lot.real_price + lot.real_price / 100 * 5}‚≠ê\n'
                                    f'–¶–µ–Ω–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –ø–æ–∫—É–ø–∫–∏: {lot.moment_buy_price}‚≠ê\n'
                                    f'–ü—Ä–æ–¥–∞–≤–µ—Ü: {lot.seller}\n'f''
                                    f'–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {lot.completion_time}\n',
                              )
    await cb.answer('–õ–æ—Ç ‚Ññ' + str(lot_id) + ' –æ–¥–æ–±—Ä–µ–Ω.')

@admin_router.callback_query(IsAdminCb(), lambda cb: re.match(r'^reject_lot_\d+$', cb.data))
async def reject_lot(cb: CallbackQuery):
    print('–Ø –ï–ë–ê–õ –ë–ê–ë–ê–ô–ö–£')
    lot_id = int(cb.data.split('_')[-1])
    await rq.reject_lot(lot_id=lot_id, tg_id=cb.from_user.id)
    await cb.answer('–õ–æ—Ç ‚Ññ' + str(lot_id) + ' –æ—Ç–∫–ª–æ–Ω–µ–Ω.')